ファイルランチャー	by流行らせるページ管理人

●概要
部分一致のAND検索で絞り込んで登録コマンドを実行するキーボードランチャ。
フォルダをスキャンして作成しておいたファイルリストを候補に追加できる。
フォルダ内のファイルの一覧を展開する機能もあり。

BREGEXP.DLL(http://www.hi-ho.ne.jp/babaq/bregexp.html)と
C/Migemo バイナリ(DLL) for Windows(http://www.kaoriya.net/)
をAutoHotkey.exeと同じフォルダに置き、
スクリプトのあるフォルダにMigemoのdictフォルダを置いておく必要がある。

アーカイブファイル内のファイルを表示/スキャンするには、統合アーカイバDLLがインストールされている必要がある。


●説明目次
・概要
・ファイルの説明
・デフォルト操作
・検索方法
・通常検索モード
・フォルダ展開モード
・コマンド選択モード
・プログラム選択モード
・引数ファイル選択モード
・直接コマンド実行
・ユーザー定義コマンド
・内部コマンド
・デフォルトの内部コマンド
・選択内容変数の展開
・起動時の変数割り当て
・起動時のコマンド実行
・外部からの遠隔操作
・タイマー実行
・キーカスタマイズ
・フォルダのインデックス作成
・ファイルのドラッグ&ドロップによる登録
・アイテムファイル
・コマンドファイル
・スキャンリストファイル
・インデックスファイル
・サブインデックスファイル
・更新履歴

●ファイルの説明
・FileLaunch.ahk
本体


・FL_Settings.ahk
キー割り当てなどの設定が記述されている。
設定方法や割り当て用のラベルなどはスクリプト内を参照。


・FL_Commands.ahk
内部コマンド用のサブルーチンが定義されている


・FileLaunch.ini
ウィンドウ位置などが記録されている


・items.txt
アイテムファイル。
1行につき1アイテムを記述。
ここに記述したコマンドがRunされる。
実行したファイルやアイテムは、自動的に先頭に移動/追加される。
書式等の詳細は後述。


・commands.txt
コマンドファイル。
詳細は後述。


・scan.txt
スキャン対象のファイルを記述するスキャンリストファイル。
書式は後述。


・path.txt
スキャンして登録されたファイルのパスが保存される


・sublist.txt
path.txtとは別に読み込まれるインデックスファイル。


・dict\
このフォルダにMigemoの辞書ファイルを入れておく


・CleanupMigemoDict.ahk
Migemoの辞書の必要以上に長い単語や正規表現オペレーター文字を含んでいて不具合を起こす恐れのある単語を削除するスクリプト。
「dict\」フォルダに「migemo-dict」を置いて実行する。



●デフォルト操作
Win+Z
	メインウィンドウを表示(グローバルホットキー)
Esc
	メインウィンドウを隠す
Ctrl+Esc
	終了
Enter
	リストの選択項目を実行する
↑
	リストの上の項目に移動
↓
	リストの下の項目に移動
Shift+↑
	リストの上の項目に範囲選択しながら移動
Shift+↓
	リストの下の項目に範囲選択しながら移動
Ctrl+↑
	リストの上の項目に移動しつつ選択状態を反転
Ctrl+↓
	リストの下の項目に移動しつつ選択状態を反転
Ctrl+Space
	リストのフォーカス項目の選択状態を反転
Ctrl+A
	リストの全項目を選択
→
	選択項目がフォルダならフォルダを展開
	ファイルなら実行する
←
	フォルダを展開中なら、上位のフォルダに移動
	通常状態なら、選択項目のファイルのあるフォルダに移動
Ctrl+\,
	通常モードに復帰
Ctrl+/
	コマンド選択モード
Ctrl+.
	プログラム選択モード
Ctrl+
	引数選択モード


●検索方法
キーワードを半角スペースで区切って入力。
全ての項目のAND検索になる。
Enterで選択ファイルが実行されるが、入力内容によってはコマンド実行やモード変更などの動作になる。

キーワードの前に以下の検索モード指定文字が付いていると、絞り込み方法が変化する。

検索モード指定文字が付いていない場合は、デフォルトの検索モードになる。
デフォルトの検索モード指定文字はSMode変数に格納されており、
「/set SMode=:」のようなコマンドを実行すれば変更することができる。

+
	キーワードを含むアイテムがマッチする。
	1文字打つごとに絞り込まれる。
	敢えてこの文字を付けることで、「:\wi」や「/opt」のように
	特別な記号を含むキーワードを検索できる。

-
	キーワードを含むアイテム以外がマッチする。
	キーワードの後に「 」を入力するまでは検索は行われない

:
	Migemoによるローマ字読み方部分一致検索。
	入力した読み方に一致する文字列を含む物がマッチする。
	1文字打つごとに絞り込まれる。
	スクリプト内の変数「MigemoSkipMatch」を「[^\\]*」等に設定することで、
	Migemo使用時にキーワードの任意の場所を省略できるスキップマッチングが
	行われるようになる。たとえば、「ahk」で「AutoHotkey」にマッチする。

>
	ファイルパスの名前部分にキーワードを含むアイテムがマッチする。
	内部では正規表現を用いている。

?
	入力した正規表現に一致する部分を含むアイテムがマッチする。
	キーワードの後に「 」を入力するまでは検索は行われない

@
	短縮検索ワードに対応する変数に格納されたキーワードで検索を行う。
	キーワードの後に「 」を入力するまでは検索は行われない
	たとえば、「@ahk」と入力した場合、「SearchWord_ahk」変数に
	格納されたキーワードで検索される。
	変数内のキーワードには、検索モード指定文字を含めることもできる。
	たとえば、「SearchWord_ahk=?AutoHotkey|\.ahk」としておけば、
	「@ahk」と入力したときに「AutoHotkey」もしくは「.ahk」を含むアイテムを
	正規表現を利用して検索するようになる。


/
	以下の部分をコマンド(後述)として扱う

●通常検索モード
「\」と入力すると、その他のモードから通常モードに復帰する

アイテムリストとインデックスの内容から検索が行われる。


●フォルダ展開モード
入力の最後が「\」で移行
選択ファイルがフォルダの時のみ。

「/o c:\windows」のようなコマンドで指定のパスを展開することもできる。
→キーでも展開できる。
←キーでは、展開中のフォルダか選択ファイルの親フォルダを展開する。

フォルダ内のファイル一覧から検索・選択する。
選択したファイルは通常モードと同様に実行できる。
ここから更に上位、下位のフォルダを展開できる。
フォルダ展開モード中に「..」と入力すると、上フォルダを展開する。

プログラム選択モードや引数ファイル選択モード中にも、通常検索モードとフォルダ展開を切り替えることができる。


●コマンド選択モード
最初に「/」をタイプするか、入力の最後を「 /」にして確定すると移行。
ファイルを選択していた場合、選択内容変数に記憶される。
コマンドリストからコマンド名の先頭一致でコマンドを検索・選択して実行できる。
入力欄の内容が空になると、通常モードに復帰する。

スペースで区切って引数を入力できる。
引数中の変数参照は展開される。
例:/o %homedir%


●プログラム選択モード
入力の最後を「 >」にして確定すると移行。
選択ファイルが変数(%P%等)に記憶され
次に選択したプログラム(以外でも可)に%P%をコマンドライン引数として渡して実行


●引数ファイル選択モード
入力の最後を「 <」にして確定すると移行。
選択していたプログラムが記憶され、
次に選択したファイルをコマンドライン引数として渡して実行


●直接コマンド実行
コマンド選択モードに入らなくても、検索ワードに続いてコマンドを入力することでコマンドを実行できる。
例:autoh ini /e
  「autoh ini」でマッチしたファイルを「/e」コマンドに渡す。
  「/e」コマンドにはデフォルトでnotepad.exeによる編集が登録されている。

「/id」の次のスペース以降のキーワードが引数として処理される
例:autoh /f SearchWord
  「autoh」でマッチしたファイルを「/f」コマンドに渡す。
  引数(%A%変数)として「SearchWord」を指定する


●ユーザー定義コマンド
後述のコマンドファイルに列挙


●内部コマンド
ユーザー定義コマンドに当該コマンドが見つからなかった場合、内部コマンドが実行される。
内部コマンドも存在しない場合は、何も起こらない。

内部コマンドはFL_Commands.ahkにスクリプトとして記述されている。
「FL_CMD_ID」というようなラベルで定義されている。
「/c」で実行されるコマンドなら「FL_CMD_c」となる。

コマンドが実行される前に、選択内容変数がセットされる。

例:ファイル選択中に「/c」とするか、「/c %Items%」のようにして実行する
FL_CMD_C:
	if A<>
		Clipboard=%A%
	else
		Clipboard=%MN%
return

内部コマンドをコマンド選択モードのリストに表示するには、コマンドファイルに「/id	説明	」のような最後がTabで終わるダミー項目として登録しておく。


●デフォルトの内部コマンド
/o
	引数で与えたフォルダを展開する
	引数がない場合、Folder変数のフォルダを展開する
/a
	選択ファイルをアイテムリストに追加する
	自動追加ではないので削除されない
	引数がある場合、タイトルとしてその引数が使われる
	引数がない場合、タイトルはファイル名部分になる
/del
	選択アイテムをアイテムリストから削除する
/scan
	Folder変数に代入されるフォルダをスキャンする
	第一引数が整数値だと、サブフォルダをたどる深さをその値に設定する。
	たとえば、「/scan 0」とすると、サブフォルダを検索しない
	引数にフォルダパスを指定すると、そのフォルダをスキャンする
	例:「/scan C:\Windows」「/scan 0 C:\Windows」
	内部コマンドの引数では、フォルダパスの最後の「\」は省略できる
/scanall
	スキャンリストファイルの設定に従ってスキャンを行う
/set
	「/set varname=value」という形式で変数に値を設定
/c
	選択ファイルの一覧か引数をクリップボードにコピー
	「/c %items%」のようにして、変数の内容をコピーすることもできる
/e
	選択ファイルを編集する。
	JPEGファイルとBMPファイルはmspaintで、RTFファイルとDOCファイルは
	ワードパッドで、それ以外はメモ帳で開かれる。
	拡張子ごとにプログラムを振り分けるコマンドの例
/addfile
	引数で指定したファイルをアイテムリストに追加する
	主にRemoteCmdなどで外部からファイルを登録したい場合に使用する
/addscanlist
	引数で与えたフォルダをスキャンリストに追加する
	引数がない場合、Folder変数のフォルダを追加する
/setkeyword
	入力欄の内容を引数で指定したものに変更する
	主にRemoteCmdなどで入力内容を操作したい場合に使用する
/exit
	スクリプトを終了する
/reload
	スクリプトを再起動する
/save
	データを保存する
/load
	データを再読込する
/clean
	データの不要項目を削除する


●選択内容変数の展開
%P%		選択したパス
%D%		選択したパスの親パス
%Drive%	選択したパスのドライブ文字
%N%		選択したパスのファイル名部分(パスの末端) 
%E%		選択したパスの拡張子 
%Name%	選択したパスの拡張子を除いたファイル名
%H%		フォルダ展開時のみ、展開中のフォルダ
%M%		選択ファイルパスを「"」で囲んで半角スペースで区切って並べたもの
%MN%	選択ファイルパスを改行で区切ったもの
%Folder%
		選択しているファイルがフォルダなら、そのパス、
		フォルダを展開中なら、展開中のフォルダのパス、
		それ以外なら、Dと同じ

%C%		クリップボードに格納されている文字列 
%A1%...%An% コマンドの引数(コマンド以降のキーワードが一つずつ格納される)
%A0%	コマンドの引数の数が格納される(内部コマンド用)
%A%		コマンドの引数全部
%K%		入力欄に入力されていた内容

その他、スクリプト内の変数や環境変数も展開できる。
「`n」は改行、「``」は「`」に置換される。
2バイト目が「`」になっている全角文字は「〜`」のようにする必要がある。
例:/c │`n│　≡　　('('('('A`` )`n│≡　〜`( ( ( ( 〜`)`n↓　≡ 　ノノノノ ノ　　ｻｯ



●起動時の変数割り当て
動作設定などの多くは、FL_Settings.ahkに変数割り当てとして記述されている。
変数の説明は、スクリプト中にコメントとして記述されている。

また、以下のようにIniファイルの[Settings]セクションに記述しておくことで、起動時の変数の値を設定できる。
VarNames=で指定した名前の変数だけが設定される。
ここで指定した変数がスクリプト中で変更された場合、データの保存を行う際にIniファイルに書き込まれる。

[Settings]
VarNames=Var1,Var2
Var1=val1
Var2=val2

更に、スクリプトのコマンドライン引数として「変数名=内容」という組み合わせで変数の値を指定できる。
内容に半角スペースを含む場合、「変数名="内 容"」と内容を「"」で囲む必要がある。
「変数名==%VerName%」のように、「=」が2つになっていると、内容の部分の変数参照が展開される。
「変数名」とだけした場合、その変数の値が「1」に設定される。



●起動時のコマンド実行
以下の変数を設定しておくと、スクリプト起動時などに任意の動作を実行させられる。

RemoteCmd
	既に起動しているスクリプトにメッセージが送られて
	対応するコマンドが実行され、新たに起動したスクリプトは終了する。
	多重起動ではない場合は何も行われない。

InitCmd
	スクリプトが起動していなかった場合、初期化処理の最後に実行される。
	多重起動時は無効。

ForceCmd
	RemoteCmdとInitCmdの両方を同時に指定する。

上記変数には、「/scanall」のようなコマンド+引数の形式か、コマンド番号を割り当てる。
以下のコマンド番号には、スクリプト内で動作が割り当てられている。
1=Show
2=Reload
3=Exit
「Remote_10=LabelName」というような形式でスクリプトに記述することで追加可能。
スクリプト中のサブルーチンラベルの他、コマンド+引数の形式でも指定できる。

スクリプト中で定義されていない場合、Iniファイルからコマンド+引数を読み込む。
たとえば、Iniファイルに以下のように記述しておけば、RemoteCmdに100を指定されたときにインデックス生成が実行されるようになる。

[Remote]
Cmd_100=/scanall


●外部からの遠隔操作
スクリプトのウィンドウに0x444番のメッセージを送ることで、他のプログラムからコマンドを実行させられる。
メッセージのwParamでコマンド番号を指定する。
任意のコマンド+引数を実行させたい場合、一旦Iniファイルに書き込んでからその番号のコマンドを実行させる。
メッセージを受け取るウィンドウのハンドルは、以下のようにIniファイルに記録されている。

[Remote]
hwnd=0x1e05be


●タイマー実行
AutoHotkeyのSetTimer命令を使用することで、任意の動作を定期的に実行させることができる。
たとえば、「SetTimer,TimerScanAll,7200000」と記述すれば、2時間ごとにTimerScanAllサブルーチンが実行される。

タイマー用として、以下のサブルーチンが用意されている
TimerScanAll
	PCが1分以上操作されていない場合のみ後述のインデックス生成を行う。
TimerActWinAddItem
	アクティブウィンドウを出しているプログラムのパスをアイテム登録する。
	タイトルバーに実在するファイルのフルパスが表示されていれば、それを登録する。


●キーカスタマイズ
FL_Settings.ahkのSetGlobalActionsやSetActionsの記述を変更することで、キーの割り当てをカスタマイズすることができる。
任意のキーに任意のサブルーチンを割り当てられるので、内部コマンドを割り当てることも可能。


●フォルダのインデックス作成
「/scanall」コマンドを実行すると、scan.txtに記述されたパターンに従いインデックスが作成され、通常検索モード時の候補に表示されるようになる。

また、フォルダ選択中や展開中に「/scan」と入力するか、「/scan c:\windows」のようにしてもスキャンできる。


●ファイルのドラッグ&ドロップによる登録
ウィンドウにファイルをドラッグ&ドロップすると、アイテムリストに追加できる。
Shiftキーを押しながらドロップすると、登録名を入力するウィンドウが表示される。
Ctrlキーを押しながらフォルダをドロップすると、そのフォルダをスキャンしインデックスに追加する。


●アイテムファイル
ここに記述された項目は、インデックスファイルよりも上に表示される。
実行されたファイルはここに自動登録される。
実行されたアイテムは一番上に移動する。

通常アイテムは、Tabの数により扱いが異なる。
Tabがない場合は、自動登録アイテムとみなされる。
書式は以下の通り。

Title	commandline
Title	WorkingDir	commandline
Title	Max|Min|Hide	WorkingDir	commandline
Title	Subtitle	Max|Min|Hide	WorkingDir	commandline
Title	Subtitle	Subtitle	Max|Min|Hide	WorkingDir	commandline

WorkingDirは起動時の作業ディレクトリ。省略時は現在の作業ディレクトリになる。
Max|Min|Hideはウィンドウの状態。3つの内ののどれかを記述。省略時は通常ウィンドウ。
Subtitleは検索用の目印などを記述しておく

commandlineの最初に「*」を付けると、変数展開が行われる。
例:edit this script	*notepad.exe %A_ScriptFullPath%

commandlineの最初が「/」だと、コマンド(引数付き)として展開して実行される
例:kita	/c ｷﾀ━━━━(ﾟ∀ﾟ)━━━━ｯ!!

最後がTabで終わっている項目は実行されないダミー。
無理矢理メモとして使いたい場合などに利用できる。

項目数が上限を超えると、上限に収まるように下の方の自動登録項目が削除される。


●コマンドファイル
書式は以下のどれか
commandlineでは、選択内容変数が展開される。

/id	commandline
/id	WorkingDir	commandline
/id	Max|Min|Hide	WorkingDir	commandline
/id	Subtitles	Max|Min|Hide	WorkingDir	commandline

例:/f	D:\VxEditor\VxGrep.exe "%D%" /f "%A%"

最後がTabで終わっている物は、実際には無効のダミー項目。
内部コマンドをコマンド選択モードのリストに表示させたいときに利用する。


●スキャンリストファイル
/scanallコマンドでスキャンされる対象を記述する
1行1フォルダで、以下の設定項目をTabで区切って記述する。

1:対象フォルダ
	フルパスで記述する。最後に「\」を付ける
2:対象正規表現
	インデックスに追加するファイルの正規表現
	デフォルトはスクリプトのlist_ptn変数で設定されている
3:フォルダも入れるか
	0ならフォルダはインデックスに追加しない
	1ならフォルダも含める(デフォルト)
4:除外フォルダ正規表現
	デフォルトはスクリプトのexclude_ptn変数で設定されている
5:サブフォルダをたどる深度
	0でサブフォルダをたどらない
	-1で上限無し(デフォルト)
6:最低スキャン間隔
	前回スキャン日時からこの間隔が空いていないとスキャンしない
	以下のように単位を表す文字+期間で指定する
		S2000	2000秒
		M180	180分
		H12		12時間
		D4		4日
	省略時は毎回必ずスキャンする
7:スキャン抑止期間
	前回スキャン日時+最低スキャン間隔
	最低スキャン間隔が指定されている場合、スキャン時に自動的に書き込まれる



●インデックスファイル
スキャンしたファイルが列挙される。
親フォルダの直後にフォルダ内のファイルやサブフォルダが全て並ぶようにすること

・リムーバブルメディアの仮想パス
USBメモリなどのリムーバブルドライブや、CD-ROMなどの光学メディアは、ドライブ文字の代わりにメディアのシリアルナンバーが保存され、実行時に当該メディアを検出してパスを生成する。
これにより、メディアのドライブ文字が変わっても、スキャンしたファイルを実行できるようになっている。
また、同じドライブに別のメディアが挿入されているとき、古いメディアのインデックスを上書きせずにスキャンできる。

当該メディアがセットされていないときは、当該メディアをセットするよう促すダイアログが表示される。

・アーカイブファイル内のファイル
アーカイブファイル内のファイルのパスは、アーカイブファイルのパスとアーカイブファイル内でのパスを「|」で区切った文字列として保存される。
当該ファイルを開こうとすると、一時フォルダに解凍してから実行される。
フォルダ展開モードでは、アーカイブファイル内を普通のフォルダと同様に表示できる。

●サブインデックスファイル
サブインデックスファイルに列挙されたファイルも、インデックスファイルの物と同じように検索候補として表示される。
サブインデックスファイルは起動時に読み込まれるだけで、変更は一切行われない。
LAN上のファイルリストを複数のPCで共有したい場合などに使う。




●更新履歴
○2006/06/14	テスト版11
・メディアが存在していない仮想パスを開こうとしたとき、メディアを挿入するように促すダイアログを表示するように
・統合アーカイバDLLを利用してアーカイブファイル内をスキャン/表示できるようにした

○2006/06/09	テスト版10
・リムーバブルメディアの仮想パスの取得で、CD-ROM類でもボリュームラベルが取得できなかったバグを修正

○2006/05/28	テスト版9
・タイマーでアクティブウィンドウのパスを登録する機能追加
・AddDeadlistで無限ループに陥る場合があるのを修正

○2006/03/14	テスト版8
・ドラッグ&ドロップでファイルを追加できるように
・起動時や多重起動時に任意の動作を実行させる機能を追加
・内部コマンドをいくつか追加
・タイマーおよび拡張子判別実行を実現させる例を追加


○2006/03/13	テスト版7
・ファイルの名前部分のみから検索する機能を追加
・正規表現検索機能を追加
・デフォルトの検索モードを変数で指定するように
・短縮検索機能を追加


○2006/03/09	テスト版6
・上下キーでの移動の際、リストの上下をループするように
・IMEでEnterを押したときにIMEを無視して確定されてしまうのを修正
・存在しないファイルを選択したとき、即座にインデックスから削除するようにした
・「-」を付けると除外検索になるように(後ろに「 」を打つまでは絞り込まない)
・コマンドの直接入力に引数を入力すると絞り込みが行われてしまう問題を修正
・特殊記号を含むキーワードを検索する「+」記号を追加
・その他、検索時の問題を修正

○2006/03/04	テスト版5
・Migemo使用時にスキップマッチングを利用できるようにした
・スキャンデータのリムーバブルドライブ対応
・固定ドライブとRAMディスク以外は存在しないファイルを自動削除しないように
・Migemoの辞書の問題のある項目を削除するスクリプトを同梱
・読み込み専用のサブインデックスファイルを指定する機能を追加
・スキャン時に対象フォルダの古いインデックスを削除するようにした
・/scanallコマンドを実装し、scan.txtの仕様を変更した
・検索を若干高速化
・スキャン先のフォルダの最初の項目がフォルダだった場合に正規表現フィルタが利かないのを修正
・フォルダ展開時の駄目文字問題を修正


○2006/03/02	テスト版4
・複数ファイルの選択に対応
・アイテムを登録する/aコマンドの追加
・アイテムを削除する/delコマンドの追加
・その他、内部コマンドの追加・修正
・「*」と入力するとアイテムリストをリスト表示の上限まで表示する機能
・ディレクトリ展開と他のモードを同時実行可能にした
・INIファイルで任意の変数の値を設定・保存できるようにした
・コマンドの引数を変数展開するようにした
・/で始まる入力時にコマンドモードに移行するように
・引数付きで実行したコマンドはアイテムに自動登録されるようにした
・コマンド選択モードの仕様をコマンド名と引数を直接入力するように変更
・入力を行うと絞り込みが行われなくても選択状態が解除されるのを修正
・コマンドやアイテムのWorkingDirも変数展開されるようにした
・タスクトレイのメニューを改良


○2006/03/01	テスト版3
・実行中に指定フォルダをスキャンする機能を追加
・存在しないことが確認されたファイルを終了時にインデックスとアイテムから削除するように
・アイテムの上限を超えた項目を自動削除するように
・コマンド用の引数に「%H%」と「%Folder%」を追加
・起動時に引数で与えられた変数割り当てを行うように
・非常駐モードの追加
・常駐モードでは起動時にウィンドウを表示しないように
・タスクトレイアイコンのダブルクリックやメニューから表示を行えるように
・ウィンドウの位置をINIファイルに記憶するように

・複数ワードで検索時にBaskSpaceなどを行うとおかしくなるのを修正
・その他、細かい修正多数


○2006/02/28	テスト版2
・候補リストのサイズの自動調節
・Migemo機能追加
・項目数上限指定などの高速化改良
・マウス操作割り当て
・非アクティブ時に自動消去、もしくはリスト折りたたみ
・コマンド機構
・コマンド、プログラム、引数選択モード
	コマンド機構と各種モードの動作確認は適当


○2006/02/27	テスト版
・ファイル形式などは変更の可能性有り
